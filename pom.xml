<?xml version="1.0"?>
<!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. 
    and/or its affiliates, and individual contributors by the @authors tag. See 
    the copyright.txt in the distribution for a full listing of individual contributors. 
    Licensed under the Apache License, Version 2.0 (the "License"); you may not 
    use this file except in compliance with the License. You may obtain a copy 
    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
    by applicable law or agreed to in writing, software distributed under the 
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
    OF ANY KIND, either express or implied. See the License for the specific 
    language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.as.quickstarts</groupId>
    <artifactId>polyglot-widgets</artifactId>
    <version>7.1.2-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Polyglot widgets</name>

    <url>http://jboss.org/jbossas</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>

    <properties>

        <!-- Explicitly declaring the source encoding eliminates the following message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.org.jboss.as.plugins.maven.plugin>7.3.Final</version.org.jboss.as.plugins.maven.plugin>
        <version.org.jboss.bom>1.0.0.Final</version.org.jboss.bom>

        <!-- other plugin versions -->
        <version.clean.plugin>2.4.1</version.clean.plugin>
        <version.compiler.plugin>2.3.1</version.compiler.plugin>
        <version.org.codehaus.mojo.gwt.maven.plugin>2.4.0</version.org.codehaus.mojo.gwt.maven.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>

        <errai.version>2.1.1.Final</errai.version>
        <gwt.version>2.4.0</gwt.version>
        <javaee.version>3.0.1.Final</javaee.version>
        <richfaces.version>4.3.0.20121024-M2</richfaces.version>
        <richfaces.bootstrap.version>4.3.0-SNAPSHOT</richfaces.bootstrap.version>
    </properties>

    <repositories>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>http://repository.jboss.org/nexus/content/groups/public/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${version.org.jboss.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.richfaces</groupId>
                <artifactId>richfaces-bom</artifactId>
                <version>${richfaces.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>12.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>${javaee.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in
     JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- GWT -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
        </dependency>

        <!-- Errai -->
        <!-- Project Dependencies -->

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-bus</artifactId>
            <version>${errai.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.annotation</groupId>
                    <artifactId>jsr250-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-ioc</artifactId>
            <version>${errai.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.inject</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.annotation</groupId>
                    <artifactId>jsr250-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-tools</artifactId>
            <version>${errai.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-marshalling</artifactId>
            <version>${errai.version}</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.jboss.errai</groupId>-->
        <!--<artifactId>errai-jaxrs-client</artifactId>-->
        <!--<version>${errai.version}</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.jboss.errai</groupId>-->
        <!--<artifactId>errai-jaxrs-provider</artifactId>-->
        <!--<version>${errai.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-cdi-client</artifactId>
            <version>${errai.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-javax-enterprise</artifactId>
            <version>${errai.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.errai</groupId>
            <artifactId>errai-weld-integration</artifactId>
            <version>${errai.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.errai</groupId>
                    <artifactId>errai-cdi-jetty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.weld.servlet</groupId>
                    <artifactId>weld-servlet-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.richfaces.ui</groupId>
            <artifactId>richfaces-components-ui</artifactId>
            <version>${richfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.richfaces.core</groupId>
            <artifactId>richfaces-core-impl</artifactId>
            <version>${richfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.richfaces.sandbox.ui.bootstrap</groupId>
            <artifactId>bootstrap-ui</artifactId>
            <version>${richfaces.bootstrap.version}</version>
        </dependency>

        <!-- Dependencies for Push and JMS -->
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <classifier>jdk15</classifier>
            <version>2.4</version>
        </dependency>

    </dependencies>

    <build>
        <!-- Set the name of the war, used as the context root when the app is deployed -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Exclude client only classes from the deployment. As these classes compile down to JavaScript,
    they are not needed at runtime. They would only introduce runtime dependencies to GWT development libraries. -->
                    <packagingExcludes>**/client/local/**/*.class</packagingExcludes>
                </configuration>
            </plugin>

            <!-- JBoss AS plugin to deploy war -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.org.jboss.as.plugins.maven.plugin}</version>
            </plugin>

            <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- GWT plugin to compile client-side java code to javascript and to run GWT development mode -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${version.org.codehaus.mojo.gwt.maven.plugin}</version>
                <configuration>
                    <inplace>true</inplace>
                    <logLevel>INFO</logLevel>
                    <extraJvmArgs>-Xmx512m</extraJvmArgs>
                    <!-- Configure GWT's development mode (formerly known as hosted mode) to not start the default
      server (embedded jetty), but to download the HTML host page from the configured runTarget. -->
                    <noServer>true</noServer>
                    <runTarget>http://localhost:8080/polyglot-widgets/</runTarget>
                </configuration>
                <executions>
                    <execution>
                        <id>gwt-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>gwt-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${version.clean.plugin}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${basedir}</directory>
                            <includes>
                                <include>www-test/**</include>
                                <include>.gwt/**</include>
                                <include>.errai/**</include>
                                <include>war/WEB-INF/deploy/**</include>
                                <include>war/WEB-INF/lib/**</include>
                                <include>src/main/webapp/WEB-INF/deploy/**</include>
                                <include>**/gwt-unitCache/**</include>
                                <include>**/*.JUnit/**</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
